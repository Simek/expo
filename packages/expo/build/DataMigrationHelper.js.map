{"version":3,"file":"DataMigrationHelper.js","sourceRoot":"","sources":["../src/DataMigrationHelper.ts"],"names":[],"mappings":"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","sourcesContent":["import Constants from 'expo-constants';\nimport * as FileSystem from 'expo-file-system';\nimport { Platform } from 'react-native';\n\n\nexport interface ConflictResolver {\n    (legacyFile: string, currentFile: string): Promise<void>;\n}\n\nexport const LOCK_FILE_NAME = \"migrationLock6453743tc\";\n\nexport function getLegacyDocumentDirectoryAndroid(): string | null {\n    if (Platform.OS !== 'android' || FileSystem.documentDirectory == null) {\n        return null;\n    }\n    // expo-file-system decodes paths so we need to encode twice\n    let id: string = encodeURIComponent(encodeURIComponent(Constants.manifest.id));\n    const oldFilesDirectory = `${FileSystem.documentDirectory}ExperienceData/${id}/`;\n    return oldFilesDirectory;\n}\n\nexport const noopResolve: ConflictResolver = async (legacyFile: string, currentFile: string): Promise<void> => {\n    // do nothing! leave legacy and current file\n};\n\nasync function treeSearch(relativePath: string, legacyPath: string, newPath: string, resolveConflict: ConflictResolver): Promise<void> {\n    const currentNewPath = `${newPath}${relativePath}`;\n    const currentLegacyPath: string = `${legacyPath}${relativePath}`;\n    const legacyPathInfo = await FileSystem.getInfoAsync(currentLegacyPath);\n    const newPathInfo = await FileSystem.getInfoAsync(currentNewPath);\n\n    if (legacyPathInfo.exists && !newPathInfo.exists) {\n        await FileSystem.copyAsync({\n            from: currentLegacyPath,\n            to: currentNewPath,\n        });\n        await FileSystem.deleteAsync(currentLegacyPath);\n        return;\n    }\n\n    if (legacyPathInfo.isDirectory) {\n        const children = await FileSystem.readDirectoryAsync(currentLegacyPath);\n        for (let child of children) {\n            await treeSearch(relativePath + `${child}/`, legacyPath, newPath, resolveConflict);\n        }\n    } else {\n        await resolveConflict(currentLegacyPath, currentNewPath);\n    }\n}\n\nasync function doesOldFilesDirectoryContainLock(path: string): Promise<boolean> {\n    const children = await FileSystem.readDirectoryAsync(path);\n    return children.indexOf(LOCK_FILE_NAME) > -1;\n}\n\nasync function addLockToOldFilesDirectory(path: string): Promise<void> {\n    await FileSystem.writeAsStringAsync(path + LOCK_FILE_NAME, \"lock\");\n}\n\nexport async function migrateFilesFromLegacyDirectoryAsync(resolveConflict?: ConflictResolver): Promise<void> {\n    const { appOwnership } = Constants;\n    if (Platform.OS !== 'android' || appOwnership !== \"standalone\") {\n        return;\n    }\n    const oldFilesDirectory = getLegacyDocumentDirectoryAndroid();\n    const newFilesDirectory = FileSystem.documentDirectory;\n    if (oldFilesDirectory == null || newFilesDirectory == null) {\n        return;\n    }\n\n    const oldFilesDirectoryInfo = await FileSystem.getInfoAsync(<string>oldFilesDirectory);\n    const doesOldFilesDirectoryExist = oldFilesDirectoryInfo[\"exists\"];\n\n    if (!doesOldFilesDirectoryExist) {\n        return;\n    }\n\n    if (await doesOldFilesDirectoryContainLock(oldFilesDirectory)) {\n        return;\n    }\n\n    if (resolveConflict == null) {\n        await FileSystem.copyAsync({\n            from: <string>oldFilesDirectory,\n            to: <string>newFilesDirectory,\n        });\n        await FileSystem.deleteAsync(<string>oldFilesDirectory);\n    } else {\n        await treeSearch(\"\", oldFilesDirectory, newFilesDirectory, resolveConflict);\n        await addLockToOldFilesDirectory(oldFilesDirectory);\n    }\n}\n"]}